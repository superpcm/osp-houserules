{"version":3,"file":"ose.js","sources":["../src/module/actor/sheets/character-sheet.js","../src/module/actor/sheets/monster-sheet.js","../src/module/actor/actor.js","../src/module/item/item.js","../src/module/item/item-sheet.js","../src/ose.js"],"sourcesContent":["const { ActorSheet } = foundry.appv1.sheets;\n\nexport class OspActorSheetCharacter extends ActorSheet {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"osp\", \"sheet\", \"actor\", \"character\"],\n      template: \"systems/osp-houserules/templates/actors/character-sheet.html\",\n      width: 600,\n      height: 500,\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\n    });\n  }\n\n  getData(options) {\n    const context = super.getData(options);\n    context.system = this.actor.system;\n    \n    // Prepare items for template\n    context.weapons = this.actor.system.weapons || [];\n    context.armor = this.actor.system.armor || [];\n    context.containers = this.actor.system.containers || [];\n    context.items = this.actor.system.items || [];\n    context.treasures = this.actor.system.treasures || [];\n    \n    // Encumbrance data\n    context.totalWeight = this.actor.system.encumbrance?.totalWeight || 0;\n    context.maxWeight = this.actor.system.encumbrance?.maxWeight || 100;\n    context.encumbrancePercentage = this.actor.system.encumbrance?.percentage || 0;\n\n    // Ensure saving throws are available\n    context.saves = this.actor.system.saves || {\n      death: { value: 0 },\n      wands: { value: 0 },\n      paralysis: { value: 0 },\n      breath: { value: 0 },\n      spells: { value: 0 }\n    };\n\n    console.log(\"osp-houserules Debug: Saving throws in template context:\", context.saves);\n\n    return context;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // --- Race/Class logic (leave unchanged) ---\n    const raceClasses = [\n      \"Elf\", \"Dwarf\", \"Gnome\", \"Hobbit\", \"Half-Elf\", \"Half-Orc\"\n    ];\n\n    const $classSelect = html.find('select[name=\"system.class\"]');\n    const $raceSelect = html.find('select[name=\"system.race\"]');\n\n    function syncRaceField() {\n      const selectedClass = $classSelect.val();\n      if (raceClasses.includes(selectedClass)) {\n        $raceSelect.val(selectedClass);\n        $raceSelect.prop(\"disabled\", true);\n      } else {\n        $raceSelect.prop(\"disabled\", false);\n      }\n    }\n\n    $classSelect.on(\"change\", syncRaceField);\n    syncRaceField();\n\n    // --- Languages tag input logic ---\n    const $tags = html.find('.languages-tags');\n    const $hidden = html.find('.char-languages');\n    const $openDialog = html.find('.open-language-dialog');\n\n    // Always include \"Common\" as the first tag\n    let languages = ($hidden.val() || \"\").split(\",\").map(l => l.trim()).filter(l => l && l !== \"Common\");\n    languages.unshift(\"Common\");\n\n    function renderTags() {\n      $tags.empty();\n      languages.forEach(lang => {\n        const $tag = $(`\n          <span class=\"lang-tag\">\n            ${lang}\n            ${lang !== \"Common\" ? `<button type=\"button\" class=\"remove-lang\" data-lang=\"${lang}\" aria-label=\"Remove ${lang}\">&times;</button>` : \"\"}\n          </span>\n        `);\n        $tags.append($tag);\n      });\n      $hidden.val(languages.join(\", \"));\n    }\n\n    renderTags();\n\n    $tags.on('click', '.remove-lang', function() {\n      const lang = $(this).data('lang');\n      languages = languages.filter(l => l !== lang && l !== \"Common\");\n      languages.unshift(\"Common\");\n      renderTags();\n    });\n\n    // Dialog for adding languages\n    $openDialog.on('click', async function() {\n      // List of standard languages\n      const allLangs = [\"Dwarvish\", \"Elvish\", \"Gnomish\", \"Hobbitish\", \"Humanish\", \"Orcish\"];\n      let dialogContent = `<form>\n        <div style=\"margin-bottom:8px;\">\n          <label><b>Select Languages:</b></label><br/>\n          <div style=\"display: flex; flex-direction: column; align-items: flex-start; gap: 6px;\">\n            ${allLangs.map(lang =>\n              `<label style=\"display: flex; align-items: center; gap: 8px;\">\n                <input type=\"checkbox\" name=\"lang\" value=\"${lang}\" ${languages.includes(lang) ? \"checked disabled\" : \"\"}/>\n                <span>${lang}</span>\n              </label>`\n            ).join(\"\")}\n          </div>\n        </div>\n        <div style=\"text-align: center;\">\n          <label><b>Custom Language:</b></label><br/>\n          <input type=\"text\" name=\"custom\" style=\"width: 80%;\" placeholder=\"Enter custom language\"/>\n        </div>\n      </form>`;\n\n      new Dialog({\n        title: \"Add Language\",\n        content: dialogContent,\n        buttons: {\n          ok: {\n            label: \"Add\",\n            callback: htmlDialog => {\n              // Add checked standard languages\n              htmlDialog.find('input[name=\"lang\"]:checked:not(:disabled)').each(function() {\n                const val = $(this).val();\n                if (val && !languages.includes(val)) languages.push(val);\n              });\n              // Add custom language\n              const custom = htmlDialog.find('input[name=\"custom\"]').val().trim();\n              if (custom && !languages.includes(custom)) languages.push(custom);\n              renderTags();\n            }\n          },\n          cancel: { label: \"Cancel\" }\n        },\n        default: \"ok\"\n      }).render(true);\n    });\n\n    // --- Item Controls ---\n    if (!this.options.editable) return;\n\n    // Create Item\n    html.find('.item-create').click(this._onItemCreate.bind(this));\n\n    // Update Item\n    html.find('.item-edit').click(this._onItemEdit.bind(this));\n\n    // Delete Item\n    html.find('.item-delete').click(this._onItemDelete.bind(this));\n\n    // Toggle Equipment\n    html.find('.item-toggle').click(this._onItemToggle.bind(this));\n\n    // Show Item\n    html.find('.item-show').click(this._onItemShow.bind(this));\n\n    // Rollable Items\n    html.find('.item-rollable').click(this._onItemRoll.bind(this));\n\n    // Item Quantity Changes\n    html.find('.quantity input').change(this._onQuantityChange.bind(this));\n\n    // Category Toggles\n    html.find('.category-caret').click(this._onCategoryToggle.bind(this));\n  }\n\n  /**\n   * Handle creating a new Owned Item for the actor using the item creation dialog\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async _onItemCreate(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const type = header.dataset.type;\n    const isTreasure = header.dataset.treasure === \"true\";\n    \n    const itemData = {\n      name: `New ${type.capitalize()}`,\n      type: type,\n      system: {}\n    };\n\n    if (type === \"item\" && isTreasure) {\n      itemData.system.treasure = true;\n    }\n\n    const cls = getDocumentClass(\"Item\");\n    return cls.create(itemData, {parent: this.actor});\n  }\n\n  /**\n   * Handle editing an Owned Item for the Actor\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = $(event.currentTarget).parents(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"item-id\"));\n    item.sheet.render(true);\n  }\n\n  /**\n   * Handle deleting an Owned Item for the Actor\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemDelete(event) {\n    event.preventDefault();\n    const li = $(event.currentTarget).parents(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"item-id\"));\n    item.delete();\n    li.slideUp(200, () => this.render(false));\n  }\n\n  /**\n   * Handle toggling an item's equipped status\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemToggle(event) {\n    event.preventDefault();\n    const li = $(event.currentTarget).parents(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"item-id\"));\n    const equipped = !item.system.equipped;\n    item.update({\"system.equipped\": equipped});\n  }\n\n  /**\n   * Handle showing an item's details in chat\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemShow(event) {\n    event.preventDefault();\n    const li = $(event.currentTarget).parents(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"item-id\"));\n    \n    // Create a chat message with item details\n    const chatData = {\n      user: game.user.id,\n      speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n      content: `<div class=\"item-card\">\n        <h3>${item.name}</h3>\n        ${item.system.description ? `<p>${item.system.description}</p>` : \"\"}\n        ${item.type === \"weapon\" ? `<p><strong>Damage:</strong> ${item.system.damage}</p>` : \"\"}\n        ${item.type === \"armor\" ? `<p><strong>AC:</strong> ${item.system.ac.value}</p>` : \"\"}\n        <p><strong>Weight:</strong> ${item.system.weight} lbs</p>\n      </div>`\n    };\n    \n    ChatMessage.create(chatData);\n  }\n\n  /**\n   * Handle rolling for an item (weapons)\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemRoll(event) {\n    event.preventDefault();\n    const li = $(event.currentTarget).parents(\".item-entry\");\n    const item = this.actor.items.get(li.data(\"item-id\"));\n    \n    if (item.type === \"weapon\") {\n      // Roll attack\n      const roll = new Roll(\"1d20\");\n      roll.toMessage({\n        speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n        flavor: `${item.name} Attack Roll`\n      });\n    }\n  }\n\n  /**\n   * Handle changing item quantities\n   * @param {Event} event   The originating change event\n   * @private\n   */\n  _onQuantityChange(event) {\n    event.preventDefault();\n    const input = event.currentTarget;\n    const itemId = input.dataset.itemId;\n    const field = input.dataset.field;\n    const value = parseInt(input.value) || 0;\n    \n    const item = this.actor.items.get(itemId);\n    if (item) {\n      item.update({[field]: value});\n    }\n  }\n\n  /**\n   * Handle toggling category visibility\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onCategoryToggle(event) {\n    event.preventDefault();\n    const caret = event.currentTarget;\n    const category = $(caret).closest('.item-category');\n    const list = category.find('.item-list');\n    \n    list.slideToggle(200);\n    $(caret).find('i').toggleClass('fa-caret-down fa-caret-right');\n  }\n}","export class OspActorSheetMonster extends foundry.appv1.sheets.ActorSheet {\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"osp\", \"sheet\", \"actor\", \"monster\"],\n      template: \"systems/osp-houserules/templates/actors/monster-sheet.html\",\n      width: 600,\n      height: 400,\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\" }],\n    });\n  }\n\n  getData(options) {\n    const context = super.getData(options);\n    context.system = this.actor.system;\n    return context;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","export class OspActor extends Actor {\n  /**\n   * Prepare Character type specific data\n   * @private\n   */\n  _prepareCharacterData() {\n    // Organize items by type\n    this.system.weapons = this.items.filter(item => item.type === \"weapon\");\n    this.system.armor = this.items.filter(item => item.type === \"armor\");\n    this.system.containers = this.items.filter(item => item.type === \"container\");\n    this.system.items = this.items.filter(item => item.type === \"item\" && !item.system.treasure);\n    this.system.treasures = this.items.filter(item => item.type === \"item\" && item.system.treasure);\n\n    // Calculate encumbrance\n    this._calculateEncumbrance();\n    \n    // Calculate saving throws\n    this._calculateSavingThrows();\n    \n    // Calculate next level XP\n    this._calculateNextLevelXP();\n    \n    // Calculate XP modifier\n    this._calculateXPModifier();\n  }\n\n    /**\n   * Calculate saving throws based on class, level, and race\n   * @private\n   */\n  _calculateSavingThrows() {\n    // Initialize saves structure if it doesn't exist\n    if (!this.system.saves) {\n      this.system.saves = {\n        death: { value: 0 },\n        wands: { value: 0 },\n        paralysis: { value: 0 },\n        breath: { value: 0 },\n        spells: { value: 0 }\n      };\n    }\n    \n    const characterClass = this.system.class || '';\n    const level = parseInt(this.system.level) || 1;\n    const race = this.system.race?.toLowerCase() || '';\n    \n    console.log(`OSP Debug: Class: \"${characterClass}\", Level: ${level}, Race: \"${race}\"`);\n\n    // OSE saving throw tables by class\n    const savingThrowTables = {\n      'fighter': {\n        death: [12, 11, 10, 10, 8, 8, 6, 6, 4, 4, 2, 2, 2, 2, 2],\n        wands: [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2, 2],\n        paralysis: [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2],\n        breath: [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2],\n        spells: [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2]\n      },\n      'cleric': {\n        death: [11, 10, 9, 8, 7, 6, 5, 4, 2, 2, 2, 2, 2, 2, 2],\n        wands: [12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 2, 2, 2, 2, 2],\n        paralysis: [14, 13, 12, 11, 10, 9, 8, 7, 5, 4, 3, 2, 2, 2, 2],\n        breath: [16, 15, 14, 13, 12, 11, 10, 9, 7, 6, 5, 4, 3, 2, 2],\n        spells: [15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2, 2, 2]\n      },\n      'magic-user': {\n        death: [13, 13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 6],\n        wands: [14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7],\n        paralysis: [13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6],\n        breath: [16, 15, 15, 14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9, 8],\n        spells: [15, 14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 7]\n      },\n      'thief': {\n        death: [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 2, 2, 2, 2],\n        wands: [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 2, 2, 2],\n        paralysis: [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 2, 2, 2, 2],\n        breath: [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 4, 3, 2, 2],\n        spells: [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 2, 2]\n      }\n    };\n\n    // Map additional classes to their saving throw patterns\n    const classMapping = {\n      // Core OSE classes\n      'fighter': 'fighter',\n      'cleric': 'cleric', \n      'magic-user': 'magic-user',\n      'thief': 'thief',\n      \n      // Advanced Fantasy classes - map to appropriate base class tables\n      'assassin': 'thief',          // Assassins use thief saves\n      'barbarian': 'fighter',       // Barbarians use fighter saves\n      'bard': 'thief',              // Bards use thief saves\n      'beast master': 'fighter',    // Beast Masters use fighter saves\n      'druid': 'cleric',            // Druids use cleric saves\n      'knight': 'fighter',          // Knights use fighter saves\n      'paladin': 'cleric',          // Paladins use cleric saves\n      'ranger': 'fighter',          // Rangers use fighter saves\n      'warden': 'fighter',          // Wardens use fighter saves\n      \n      // Magic users and variants\n      'illusionist': 'magic-user',  // Illusionists use magic-user saves\n      'mage': 'magic-user',         // Mages use magic-user saves\n      \n      // Race-as-class options\n      'dwarf': 'fighter',           // Dwarf class uses fighter saves\n      'elf': 'fighter',             // Elf class uses fighter saves (with some magic-user features)\n      'gnome': 'cleric',            // Gnome class uses cleric saves\n      'half-elf': 'fighter',        // Half-Elf class uses fighter saves\n      'half-orc': 'fighter',        // Half-Orc class uses fighter saves\n      'hobbit': 'thief'             // Hobbit class uses thief saves\n    };\n\n    // Get the appropriate save table for this class\n    const mappedClass = classMapping[characterClass.toLowerCase()] || 'fighter';\n    const saveTable = savingThrowTables[mappedClass];\n    console.log(`OSP Debug: Using save table for: ${characterClass.toLowerCase()} -> ${mappedClass}`);\n    const levelIndex = Math.min(Math.max(level - 1, 0), 14); // Levels 1-15, array index 0-14\n    console.log(`OSP Debug: Level index: ${levelIndex}`);\n\n    // Calculate each saving throw\n    ['death', 'wands', 'paralysis', 'breath', 'spells'].forEach(saveType => {\n      // Ensure the save type exists in the structure\n      if (!this.system.saves[saveType]) {\n        this.system.saves[saveType] = { value: 0 };\n      }\n      \n      let baseValue = saveTable[saveType] ? saveTable[saveType][levelIndex] : 15;\n      console.log(`OSP Debug: ${saveType} base value: ${baseValue}`);\n      \n      // Apply racial bonuses\n      let racialBonus = 0;\n      if (race === 'dwarf' && (saveType === 'wands' || saveType === 'spells' || saveType === 'paralysis' || saveType === 'death')) {\n        racialBonus = 4; // Dwarves get +4 vs magic\n      } else if (race === 'hobbit' && (saveType === 'wands' || saveType === 'spells' || saveType === 'paralysis' || saveType === 'death')) {\n        racialBonus = 4; // Hobbits get +4 vs magic\n      }\n      \n      const finalValue = Math.max(baseValue - racialBonus, 2); // Minimum save of 2\n      console.log(`OSP Debug: ${saveType} final value: ${finalValue} (base ${baseValue} - racial ${racialBonus})`);\n      \n      this.system.saves[saveType].value = finalValue;\n    });\n  }\n\n  /**\n   * Calculate next level XP based on class and current level\n   * @private\n   */\n  _calculateNextLevelXP() {\n    const characterClass = this.system.class || '';\n    const level = parseInt(this.system.level) || 1;\n    \n    // OSE XP progression tables\n    const xpTables = {\n      // Fighter progression (and similar classes)\n      'fighter': [0, 2000, 4000, 8000, 16000, 32000, 64000, 120000, 240000, 360000, 480000, 600000, 720000, 840000, 960000],\n      \n      // Cleric progression\n      'cleric': [0, 1500, 3000, 6000, 12000, 25000, 50000, 100000, 200000, 300000, 400000, 500000, 600000, 700000, 800000],\n      \n      // Magic-User progression (higher requirements)\n      'magic-user': [0, 2500, 5000, 10000, 20000, 40000, 80000, 150000, 300000, 450000, 600000, 750000, 900000, 1050000, 1200000],\n      \n      // Thief progression\n      'thief': [0, 1200, 2400, 4800, 9600, 20000, 40000, 80000, 160000, 280000, 400000, 520000, 640000, 760000, 880000]\n    };\n\n    // Map additional classes to their XP patterns (same as saving throw mapping)\n    const classXPMapping = {\n      // Core OSE classes\n      'fighter': 'fighter',\n      'cleric': 'cleric', \n      'magic-user': 'magic-user',\n      'thief': 'thief',\n      \n      // Advanced Fantasy classes - map to appropriate base class XP tables\n      'assassin': 'thief',          // Assassins use thief XP\n      'barbarian': 'fighter',       // Barbarians use fighter XP\n      'bard': 'thief',              // Bards use thief XP\n      'beast master': 'fighter',    // Beast Masters use fighter XP\n      'druid': 'cleric',            // Druids use cleric XP\n      'knight': 'fighter',          // Knights use fighter XP\n      'paladin': 'cleric',          // Paladins use cleric XP\n      'ranger': 'fighter',          // Rangers use fighter XP\n      'warden': 'fighter',          // Wardens use fighter XP\n      \n      // Magic users and variants\n      'illusionist': 'magic-user',  // Illusionists use magic-user XP\n      'mage': 'magic-user',         // Mages use magic-user XP\n      \n      // Race-as-class options\n      'dwarf': 'fighter',           // Dwarf class uses fighter XP\n      'elf': 'magic-user',          // Elf class uses magic-user XP (fighter/magic-user hybrid)\n      'gnome': 'cleric',            // Gnome class uses cleric XP\n      'half-elf': 'fighter',        // Half-Elf class uses fighter XP\n      'half-orc': 'fighter',        // Half-Orc class uses fighter XP\n      'hobbit': 'thief'             // Hobbit class uses thief XP\n    };\n\n    // Get the appropriate XP table for this class\n    const mappedClass = classXPMapping[characterClass.toLowerCase()] || 'fighter';\n    const xpTable = xpTables[mappedClass];\n    \n    // Calculate next level XP (if max level, show current level requirement)\n    const nextLevel = Math.min(level + 1, 15); // Max level 15\n    const nextLevelIndex = nextLevel - 1; // Convert to array index\n    \n    this.system.nextLevelXP = xpTable[nextLevelIndex] || xpTable[14]; // Use max level XP if beyond table\n  }\n\n  /**\n   * Calculate XP modifier based on class prime requisites\n   * @private\n   */\n  _calculateXPModifier() {\n    const characterClass = this.system.class || '';\n    const attributes = this.system.attributes || {};\n    \n    // Prime requisite mapping for each class\n    const primeRequisites = {\n      // Core OSE classes\n      'fighter': ['str'],\n      'cleric': ['wis'], \n      'magic-user': ['int'],\n      'thief': ['dex'],\n      \n      // Advanced Fantasy classes\n      'assassin': ['str', 'dex'],       // Assassins need both STR and DEX\n      'barbarian': ['str', 'con'],      // Barbarians need STR and CON\n      'bard': ['dex', 'cha'],           // Bards need DEX and CHA\n      'beast master': ['str', 'wis'],   // Beast Masters need STR and WIS\n      'druid': ['wis'],                 // Druids use WIS like clerics\n      'knight': ['str'],                // Knights use STR like fighters\n      'paladin': ['str', 'cha'],        // Paladins need STR and CHA\n      'ranger': ['str', 'wis'],         // Rangers need STR and WIS\n      'warden': ['str', 'con'],         // Wardens need STR and CON\n      \n      // Magic users and variants\n      'illusionist': ['int'],           // Illusionists use INT\n      'mage': ['int'],                  // Mages use INT like magic-users\n      \n      // Race-as-class options (these often have multiple requirements)\n      'dwarf': ['str'],                 // Dwarf class uses STR\n      'elf': ['int', 'str'],            // Elf class needs INT and STR\n      'gnome': ['int'],                 // Gnome class uses INT\n      'half-elf': ['str', 'int'],       // Half-Elf class needs STR and INT\n      'half-orc': ['str'],              // Half-Orc class uses STR\n      'hobbit': ['dex', 'str']          // Hobbit class needs DEX and STR\n    };\n\n    const classReqs = primeRequisites[characterClass.toLowerCase()] || ['str'];\n    \n    // OSE XP modifier table based on ability scores\n    const getXPModifier = (score) => {\n      const numScore = parseInt(score) || 10;\n      if (numScore <= 8) return -10;      // 3-8: -10%\n      if (numScore <= 12) return 0;       // 9-12: No modifier\n      if (numScore <= 15) return 5;       // 13-15: +5%\n      if (numScore <= 17) return 10;      // 16-17: +10%\n      return 15;                          // 18: +15%\n    };\n\n    let totalModifier = 0;\n    \n    if (classReqs.length === 1) {\n      // Single prime requisite\n      const reqScore = attributes[classReqs[0]]?.value || 10;\n      totalModifier = getXPModifier(reqScore);\n    } else {\n      // Multiple prime requisites - use average or most restrictive approach\n      // For OSE, typically the average of both is used\n      let modifierSum = 0;\n      for (const req of classReqs) {\n        const reqScore = attributes[req]?.value || 10;\n        modifierSum += getXPModifier(reqScore);\n      }\n      totalModifier = Math.round(modifierSum / classReqs.length);\n    }\n\n    this.system.xpModifier = totalModifier;\n  }\n\n  /** @override */\n  get displayName() {\n    return \"Actor\";\n  }\n\n  /** @override */\n  get displayNamePlural() {\n    return \"Actors\";\n  }\n\n  /** @override */\n  prepareData() {\n    super.prepareData();\n    // Add any system-specific actor prep here\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    \n    // Prepare character-specific data\n    if (this.type === \"character\") {\n      this._prepareCharacterData();\n    }\n  }\n\n  /**\n   * Prepare character-specific data\n   * @private\n   */\n  _prepareCharacterData() {\n    // Organize items by type\n    this.system.weapons = this.items.filter(item => item.type === \"weapon\");\n    this.system.armor = this.items.filter(item => item.type === \"armor\");\n    this.system.containers = this.items.filter(item => item.type === \"container\");\n    this.system.items = this.items.filter(item => item.type === \"item\" && !item.system.treasure);\n    this.system.treasures = this.items.filter(item => item.type === \"item\" && item.system.treasure);\n\n    // Calculate encumbrance\n    this._calculateEncumbrance();\n    \n    // Calculate saving throws\n    this._calculateSavingThrows();\n  }\n\n  /**\n   * Calculate encumbrance for the character\n   * @private\n   */\n  _calculateEncumbrance() {\n    let totalWeight = 0;\n    \n    // Sum up all item weights\n    this.items.forEach(item => {\n      if (item.system.equipped || item.type === \"armor\" || item.type === \"weapon\") {\n        const quantity = item.system.quantity?.value || 1;\n        const weight = item.system.weight || 0;\n        totalWeight += weight * quantity;\n      }\n    });\n\n    // Basic encumbrance calculation (can be made more sophisticated)\n    const maxWeight = 100; // Base carrying capacity\n    const encumbrancePercentage = Math.min(100, (totalWeight / maxWeight) * 100);\n\n    this.system.encumbrance = {\n      totalWeight: totalWeight,\n      maxWeight: maxWeight,\n      percentage: encumbrancePercentage,\n      encumbered: encumbrancePercentage > 50\n    };\n  }\n}\n","export class OspItem extends Item {\n  /** @override */\n  prepareData() {\n    super.prepareData();\n    \n    // Calculate cumulative properties for items\n    if (this.type === \"item\" && this.system.treasure) {\n      this.system.cumulativeCost = this.system.cost * this.system.quantity.value;\n      this.system.cumulativeWeight = this.system.weight * this.system.quantity.value;\n    }\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n  }\n\n  /**\n   * Get the item's tags for display\n   */\n  get displayTags() {\n    if (this.type === \"weapon\" && this.system.tags) {\n      return this.system.tags.map(tag => {\n        return {\n          value: tag,\n          title: tag\n        };\n      });\n    }\n    return [];\n  }\n\n  /**\n   * Check if the item is a weapon that can be used for attacks\n   */\n  get isWeapon() {\n    return this.type === \"weapon\";\n  }\n\n  /**\n   * Check if the item is equipped\n   */\n  get isEquipped() {\n    return this.system.equipped || false;\n  }\n}\n","export class OspItemSheet extends foundry.appv1.sheets.ItemSheet {\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"osp\", \"sheet\", \"item\"],\n      width: 520,\n      height: 480,\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\" }],\n      dragDrop: [{ dragSelector: \".item-list .item\", dropSelector: null }],\n    });\n  }\n\n  /** @override */\n  get template() {\n    const path = \"systems/osp-houserules/templates/items\";\n    return `${path}/${this.item.type}-sheet.html`;\n  }\n\n  /** @override */\n  getData() {\n    const context = super.getData();\n    \n    // Add the item's system data for easy access\n    context.system = this.item.system;\n    context.flags = this.item.flags;\n    \n    // Add configuration data\n    context.config = {\n      damageTypes: [\"d4\", \"d6\", \"d8\", \"d10\", \"d12\"],\n      armorTypes: [\"light\", \"medium\", \"heavy\"],\n      weaponTypes: [\"melee\", \"missile\", \"both\"]\n    };\n\n    return context;\n  }\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    // Add or remove tags\n    html.find(\".tag-control\").click(this._onTagControl.bind(this));\n  }\n\n  /**\n   * Handle adding or removing tags from weapons\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onTagControl(event) {\n    event.preventDefault();\n    const button = event.currentTarget;\n    const action = button.dataset.action;\n    \n    if (action === \"add\") {\n      const input = button.previousElementSibling;\n      const tag = input.value.trim();\n      if (tag) {\n        const tags = this.item.system.tags || [];\n        if (!tags.includes(tag)) {\n          tags.push(tag);\n          this.item.update({ \"system.tags\": tags });\n        }\n        input.value = \"\";\n      }\n    } else if (action === \"remove\") {\n      const tag = button.dataset.tag;\n      const tags = this.item.system.tags || [];\n      const filteredTags = tags.filter(t => t !== tag);\n      this.item.update({ \"system.tags\": filteredTags });\n    }\n  }\n}\n","// ose.js - Main system entry point\nconsole.log(\"osp-houserules Debug: src/ose.js module loaded\");\n\nimport { OspActorSheetCharacter } from \"./module/actor/sheets/character-sheet.js\";\nimport { OspActorSheetMonster } from \"./module/actor/sheets/monster-sheet.js\";\nimport { OspActor } from \"./module/actor/actor.js\";\nimport { OspItem } from \"./module/item/item.js\";\nimport { OspItemSheet } from \"./module/item/item-sheet.js\";\n\nHooks.once(\"init\", () => {\n  // Configure Actor document classes\n  CONFIG.Actor.documentClass = OspActor;\n  CONFIG.Actor.label = game.i18n.localize(\"osp-houserules.Actor.documentLabel\");\n  \n  // Configure Item document classes\n  CONFIG.Item.documentClass = OspItem;\n  \n  // Unregister core sheets\n  foundry.documents.collections.Actors.unregisterSheet(\"core\", foundry.appv1.sheets.ActorSheet);\n  foundry.documents.collections.Items.unregisterSheet(\"core\", foundry.appv1.sheets.ItemSheet);\n  \n  // Register Actor sheets\n  foundry.documents.collections.Actors.registerSheet(\"osp-houserules\", OspActorSheetCharacter, {\n    types: [\"character\"],\n    makeDefault: true,\n    label: game.i18n.localize(\"osp-houserules.Actor.Type.character\")\n  });\n  foundry.documents.collections.Actors.registerSheet(\"osp-houserules\", OspActorSheetMonster, {\n    types: [\"monster\"],\n    makeDefault: true,\n    label: game.i18n.localize(\"osp-houserules.Actor.Type.monster\")\n  });\n\n  // Register Item sheets\n  foundry.documents.collections.Items.registerSheet(\"osp-houserules\", OspItemSheet, {\n    types: [\"weapon\", \"armor\", \"item\", \"container\"],\n    makeDefault: true,\n    label: \"OSP Item Sheet\"\n  });\n\n  CONFIG.Actor.typeLabels = {\n    character: game.i18n.localize(\"osp-houserules.Actor.Type.character\"),\n    monster: game.i18n.localize(\"osp-houserules.Actor.Type.monster\")\n  };\n\n  Hooks.on(\"renderActorConfig\", (app, html, data) => {\n    const $html = $(html);\n    const $select = $html.find('select[name=\"type\"]');\n    const $submit = $html.find('button[type=\"submit\"]');\n\n    // Insert a placeholder option if not present\n    if ($select.find('option[value=\"\"]').length === 0) {\n      $select.prepend(\n        `<option value=\"\" disabled>${game.i18n.localize(\"osp-houserules.ChooseType\")}</option>`\n      );\n      $select.val(\"\"); // Set the select to the placeholder\n    }\n\n    // Localize type options\n    $select.find('option[value=\"character\"]').text(game.i18n.localize(\"osp-houserules.Actor.Type.character\"));\n    $select.find('option[value=\"monster\"]').text(game.i18n.localize(\"osp-houserules.Actor.Type.monster\"));\n\n    // Disable submit if no type is selected\n    $submit.prop(\"disabled\", $select.val() === \"\");\n\n    // Enable submit when a valid type is chosen\n    $select.on(\"change\", function () {\n      $submit.prop(\"disabled\", $select.val() === \"\");\n    });\n  });\n\n  console.log(\"osp-houserules Debug: Actor and Item sheets registered successfully\");\n});\n\n// Register a Handlebars helper for range\nHandlebars.registerHelper('range', function(start, end) {\n  start = parseInt(start);\n  end = parseInt(end);\n  let result = [];\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n  return result;\n});\n\n// Register a Handlebars helper for parseInt\nHandlebars.registerHelper('parseInt', function(value) {\n  return parseInt(value, 10);\n});\n\n// Register a Handlebars helper for multiplication\nHandlebars.registerHelper('multiply', function(a, b) {\n  return (parseFloat(a) || 0) * (parseFloat(b) || 0);\n});\n\n// Register a Handlebars helper for calculating ability modifiers (OSE rules)\nHandlebars.registerHelper('abilityMod', function(score) {\n  const numScore = parseInt(score, 10);\n  if (isNaN(numScore)) return '+0';\n  \n  let modifier;\n  if (numScore === 3) modifier = -3;\n  else if (numScore >= 4 && numScore <= 5) modifier = -2;\n  else if (numScore >= 6 && numScore <= 8) modifier = -1;\n  else if (numScore >= 9 && numScore <= 12) modifier = 0;\n  else if (numScore >= 13 && numScore <= 15) modifier = +1;\n  else if (numScore >= 16 && numScore <= 17) modifier = +2;\n  else if (numScore === 18) modifier = +3;\n  else modifier = 0; // fallback for scores outside normal range\n  \n  return modifier >= 0 ? `+${modifier}` : `${modifier}`;\n});\n\n// Register helpers for calculating saving throws\nHandlebars.registerHelper('getSavingThrow', function(saveType, characterClass, level, race) {\n  const classLower = (characterClass || '').toLowerCase();\n  const raceLower = (race || '').toLowerCase();\n  const charLevel = parseInt(level, 10) || 1;\n  \n  // OSE Saving Throw tables by class\n  const savingThrows = {\n    'fighter': {\n      'death': [12, 11, 10, 10, 8, 8, 6, 6, 4, 4, 2, 2, 2, 2],\n      'wands': [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2],\n      'paralysis': [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2],\n      'breath': [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2],\n      'spells': [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3]\n    },\n    'cleric': {\n      'death': [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2, 2, 2],\n      'wands': [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2, 2],\n      'paralysis': [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2],\n      'breath': [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3],\n      'spells': [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2]\n    },\n    'thief': {\n      'death': [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2],\n      'wands': [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2],\n      'paralysis': [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 2],\n      'breath': [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3],\n      'spells': [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2]\n    },\n    'magic-user': {\n      'death': [13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 6],\n      'wands': [14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 7],\n      'paralysis': [13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 6],\n      'breath': [16, 16, 15, 15, 14, 14, 13, 13, 12, 12, 11, 11, 10, 9],\n      'spells': [15, 15, 14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9, 8]\n    }\n  };\n  \n  // Default to fighter if class not found\n  const saveTable = savingThrows[classLower] || savingThrows['fighter'];\n  const levelIndex = Math.min(Math.max(charLevel - 1, 0), 13);\n  let baseValue = saveTable[saveType] ? saveTable[saveType][levelIndex] : 15;\n  \n  // Apply racial bonuses\n  let racialBonus = 0;\n  if (raceLower === 'dwarf' && (saveType === 'wands' || saveType === 'spells' || saveType === 'paralysis' || saveType === 'death')) {\n    racialBonus = 4; // Dwarves get +4 vs magic\n  } else if (raceLower === 'hobbit' && (saveType === 'wands' || saveType === 'spells' || saveType === 'paralysis' || saveType === 'death')) {\n    racialBonus = 4; // Hobbits get +4 vs magic\n  }\n  \n  return Math.max(baseValue - racialBonus, 2); // Minimum save of 2\n});\n\n// Register a Handlebars helper for next level XP calculation\nHandlebars.registerHelper('getNextLevelXP', function(characterClass, level) {\n  const classLower = (characterClass || '').toLowerCase();\n  const currentLevel = parseInt(level) || 1;\n  \n  // OSE XP progression tables\n  const xpTables = {\n    // Fighter progression (and similar classes)\n    'fighter': [0, 2000, 4000, 8000, 16000, 32000, 64000, 120000, 240000, 360000, 480000, 600000, 720000, 840000, 960000],\n    \n    // Cleric progression\n    'cleric': [0, 1500, 3000, 6000, 12000, 25000, 50000, 100000, 200000, 300000, 400000, 500000, 600000, 700000, 800000],\n    \n    // Magic-User progression (higher requirements)\n    'magic-user': [0, 2500, 5000, 10000, 20000, 40000, 80000, 150000, 300000, 450000, 600000, 750000, 900000, 1050000, 1200000],\n    \n    // Thief progression\n    'thief': [0, 1200, 2400, 4800, 9600, 20000, 40000, 80000, 160000, 280000, 400000, 520000, 640000, 760000, 880000]\n  };\n\n  // Map additional classes to their XP patterns\n  const classXPMapping = {\n    // Core OSE classes\n    'fighter': 'fighter',\n    'cleric': 'cleric', \n    'magic-user': 'magic-user',\n    'thief': 'thief',\n    \n    // Advanced Fantasy classes - map to appropriate base class XP tables\n    'assassin': 'thief',          // Assassins use thief XP\n    'barbarian': 'fighter',       // Barbarians use fighter XP\n    'bard': 'thief',              // Bards use thief XP\n    'beast master': 'fighter',    // Beast Masters use fighter XP\n    'druid': 'cleric',            // Druids use cleric XP\n    'knight': 'fighter',          // Knights use fighter XP\n    'paladin': 'cleric',          // Paladins use cleric XP\n    'ranger': 'fighter',          // Rangers use fighter XP\n    'warden': 'fighter',          // Wardens use fighter XP\n    \n    // Magic users and variants\n    'illusionist': 'magic-user',  // Illusionists use magic-user XP\n    'mage': 'magic-user',         // Mages use magic-user XP\n    \n    // Race-as-class options\n    'dwarf': 'fighter',           // Dwarf class uses fighter XP\n    'elf': 'magic-user',          // Elf class uses magic-user XP (fighter/magic-user hybrid)\n    'gnome': 'cleric',            // Gnome class uses cleric XP\n    'half-elf': 'fighter',        // Half-Elf class uses fighter XP\n    'half-orc': 'fighter',        // Half-Orc class uses fighter XP\n    'hobbit': 'thief'             // Hobbit class uses thief XP\n  };\n\n  // Get the appropriate XP table for this class\n  const mappedClass = classXPMapping[classLower] || 'fighter';\n  const xpTable = xpTables[mappedClass];\n  \n  // Calculate next level XP (if max level, show current level requirement)\n  const nextLevel = Math.min(currentLevel + 1, 15); // Max level 15\n  const nextLevelIndex = nextLevel - 1; // Convert to array index\n  \n  return xpTable[nextLevelIndex] || xpTable[14]; // Use max level XP if beyond table\n});\n\n// Register a Handlebars helper for XP modifier calculation\nHandlebars.registerHelper('getXPModifier', function(characterClass, attributes) {\n  const classLower = (characterClass || '').toLowerCase();\n  const attrs = attributes || {};\n  \n  // Prime requisite mapping for each class\n  const primeRequisites = {\n    // Core OSE classes\n    'fighter': ['str'],\n    'cleric': ['wis'], \n    'magic-user': ['int'],\n    'thief': ['dex'],\n    \n    // Advanced Fantasy classes\n    'assassin': ['str', 'dex'],       // Assassins need both STR and DEX\n    'barbarian': ['str', 'con'],      // Barbarians need STR and CON\n    'bard': ['dex', 'cha'],           // Bards need DEX and CHA\n    'beast master': ['str', 'wis'],   // Beast Masters need STR and WIS\n    'druid': ['wis'],                 // Druids use WIS like clerics\n    'knight': ['str'],                // Knights use STR like fighters\n    'paladin': ['str', 'cha'],        // Paladins need STR and CHA\n    'ranger': ['str', 'wis'],         // Rangers need STR and WIS\n    'warden': ['str', 'con'],         // Wardens need STR and CON\n    \n    // Magic users and variants\n    'illusionist': ['int'],           // Illusionists use INT\n    'mage': ['int'],                  // Mages use INT like magic-users\n    \n    // Race-as-class options\n    'dwarf': ['str'],                 // Dwarf class uses STR\n    'elf': ['int', 'str'],            // Elf class needs INT and STR\n    'gnome': ['int'],                 // Gnome class uses INT\n    'half-elf': ['str', 'int'],       // Half-Elf class needs STR and INT\n    'half-orc': ['str'],              // Half-Orc class uses STR\n    'hobbit': ['dex', 'str']          // Hobbit class needs DEX and STR\n  };\n\n  const classReqs = primeRequisites[classLower] || ['str'];\n  \n  // OSE XP modifier table based on ability scores\n  const getXPModifier = (score) => {\n    const numScore = parseInt(score) || 10;\n    if (numScore <= 8) return -10;      // 3-8: -10%\n    if (numScore <= 12) return 0;       // 9-12: No modifier\n    if (numScore <= 15) return 5;       // 13-15: +5%\n    if (numScore <= 17) return 10;      // 16-17: +10%\n    return 15;                          // 18: +15%\n  };\n\n  let totalModifier = 0;\n  \n  if (classReqs.length === 1) {\n    // Single prime requisite\n    const reqScore = attrs[classReqs[0]]?.value || 10;\n    totalModifier = getXPModifier(reqScore);\n  } else {\n    // Multiple prime requisites - use average\n    let modifierSum = 0;\n    for (const req of classReqs) {\n      const reqScore = attrs[req]?.value || 10;\n      modifierSum += getXPModifier(reqScore);\n    }\n    totalModifier = Math.round(modifierSum / classReqs.length);\n  }\n\n  return totalModifier;\n});\n\n// Register a Handlebars helper to display prime requisites for a class\nHandlebars.registerHelper('getPrimeRequisites', function(characterClass) {\n  const classLower = (characterClass || '').toLowerCase();\n  \n  const primeRequisites = {\n    // Core OSE classes\n    'fighter': ['STR'],\n    'cleric': ['WIS'], \n    'magic-user': ['INT'],\n    'thief': ['DEX'],\n    \n    // Advanced Fantasy classes\n    'assassin': ['STR', 'DEX'],\n    'barbarian': ['STR', 'CON'],\n    'bard': ['DEX', 'CHA'],\n    'beast master': ['STR', 'WIS'],\n    'druid': ['WIS'],\n    'knight': ['STR'],\n    'paladin': ['STR', 'CHA'],\n    'ranger': ['STR', 'WIS'],\n    'warden': ['STR', 'CON'],\n    \n    // Magic users and variants\n    'illusionist': ['INT'],\n    'mage': ['INT'],\n    \n    // Race-as-class options\n    'dwarf': ['STR'],\n    'elf': ['INT', 'STR'],\n    'gnome': ['INT'],\n    'half-elf': ['STR', 'INT'],\n    'half-orc': ['STR'],\n    'hobbit': ['DEX', 'STR']\n  };\n\n  const classReqs = primeRequisites[classLower] || ['STR'];\n  return classReqs.join(', ');\n});\n\n// Register a Handlebars helper for path resolution\nHandlebars.registerHelper('path', function(templatePath) {\n  return `systems/osp-houserules${templatePath}`;\n});\n\n// Unpause the game when Foundry VTT starts\nHooks.once(\"ready\", () => {\n  if (game.paused) {\n    game.togglePause();\n    console.log(\"osp-houserules: Game automatically unpaused on startup\");\n  }\n});\n"],"names":[],"mappings":"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"}