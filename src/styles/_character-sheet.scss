/* Character sheet specific styles extracted from templates/actors/character-sheet.html
   Migrate presentation out of the template and into this partial. */

/* ================================================================
   DEBUG CONFIGURATION
   ================================================================
   
   Uncomment the sections below to enable visual debugging for specific
   components. These should be commented out in production.
   
   ================================================================ */

/* Portrait Debug - Comment out for production */
/*
.cs-portrait-container { 
  border: 5px solid red !important; 
  background: rgba(255,0,0,0.5) !important; 
  overflow: visible !important;
  z-index: 99999 !important;
}
.cs-portrait-display { 
  border: 3px solid blue !important; 
  background: rgba(0,0,255,0.3) !important;
  overflow: visible !important; 
}
.cs-portrait-img { 
  border: 3px solid green !important; 
  background: rgba(0,255,0,0.3) !important;
}

/* Debug old portrait classes too */
/*
.portrait-display { 
  border: 3px solid orange !important; 
  background: rgba(255,165,0,0.3) !important; 
  position: absolute; 
  top: 0; 
  left: 0; 
  width: 100%; 
  height: 100%; 
}
.portrait-img { 
  border: 3px solid purple !important; 
  background: rgba(128,0,128,0.3) !important;
  width: 100%; 
  height: 100%; 
  display: block; 
}
*/

/* Field Debug - Uncomment to show field boundaries */
/*
.cs-char-name { border: 1px solid orange !important; }
.cs-select-large { border: 1px solid purple !important; }
.cs-background-select { border: 1px solid cyan !important; }
.cs-race-select { border: 1px solid yellow !important; }
.cs-alignment-select { border: 1px solid pink !important; }
.cs-age-field { border: 1px solid lime !important; }
.cs-sex-field { border: 1px solid magenta !important; }
.cs-height-field { border: 1px solid brown !important; }
.cs-weight-field { border: 1px solid navy !important; }
.cs-languages-field { border: 1px solid teal !important; }
*/

/* Positioning Debug - Comment out for production */
/*
.cs-abs { 
  outline: 5px dashed red !important; 
  background: rgba(255,255,0,0.3) !important;
}
.cs-abs::before { 
  content: attr(class); 
  position: absolute; 
  top: -15px; 
  left: 0; 
  font-size: 10px; 
  background: black; 
  color: white; 
  padding: 2px; 
  z-index: 999999; 
}
*/

/* Transform Debug - Uncomment to show transform origins */
/*
[style*="transform"] { outline: 1px dotted blue !important; }
[style*="transform"]::after { content: "T"; position: absolute; top: 0; right: 0; font-size: 8px; background: blue; color: white; padding: 1px; z-index: 999999; }
*/

/* ================================================================
   END DEBUG CONFIGURATION
   ================================================================ */

/* Centralized position variables - change these to tweak sheet layout globally */
$cs-pos-level-left: 460px !default;
$cs-pos-level-top: 20px !default;
$cs-pos-portrait-left: 34px !default;
$cs-pos-portrait-top: 75px !default;
$cs-pos-languages-left: 318px !default;
$cs-pos-languages-top: 183px !default;
$cs-pos-xpmod-left: 530px !default;
$cs-pos-xpmod-top: 20px !default;
$cs-pos-xp-left: 319px !default;
$cs-pos-xp-top: 74px !default;
$cs-pos-next-left: 460px !default;
$cs-pos-next-top: 74px !default;

/* Portrait dimension variables - adjust these for different aspect ratios */
$cs-portrait-width: 138px !default;    /* Standard width */
$cs-portrait-height: 183px !default;   /* 3:4 aspect ratio (portrait orientation) */
/* Alternative aspect ratios:
   Square: width: 138px, height: 138px
   4:3 landscape: width: 183px, height: 138px  
   16:9 landscape: width: 245px, height: 138px
   2:3 portrait: width: 138px, height: 207px */

/* Additional header / field position presets discovered during sweep */
$cs-pos-name-left: 40px !default;
$cs-pos-name-top: 14px !default;
$cs-pos-namegroup-left: 33px !default;
$cs-pos-namegroup-top: 16px !default;
$cs-pos-class-left: 319px !default;
$cs-pos-class-top: 16px !default;
$cs-pos-alignment-left: 319px !default;
$cs-pos-alignment-top: 125px !default;
$cs-pos-race-left: 179px !default;
$cs-pos-race-top: 74px !default;
$cs-pos-age-left: 179px !default;
$cs-pos-age-top: 129px !default;
$cs-pos-sex-left: 249px !default;
$cs-pos-sex-top: 129px !default;
$cs-pos-height-left: 179px !default;
$cs-pos-height-top: 183px !default;
$cs-pos-weight-left: 247px !default;
$cs-pos-weight-top: 183px !default;
$cs-pos-background-left: 460px !default;
$cs-pos-background-top: 129px !default;
$cs-pos-save-label-left: -161px !default;
$cs-pos-save-label-top: 14px !default;



/* Background Image Override - Apply to entire sheet and window */
form.osp.sheet.actor.character,
.osp.sheet.actor.character,
.application.window-app.sheet.actor.character.osp,
.application.window-app.sheet.actor.character.osp .window-content,
.window-content form.osp.sheet.actor.character,
.window-content .osp.sheet.actor.character,
.window-content .window-content form.osp.sheet.actor.character,
.osp .window-content {
  background: url('/systems/osp-houserules/assets/backgrounds/osp-parchment-background.webp') no-repeat center center !important;
  background-size: 100% !important;
  background-attachment: scroll !important;
  color: #704214 !important;
}

/* Single Background Image System - Applied to window instead of form */
form.osp.sheet.actor.character {
  position: relative;
}

/* Ensure the application window allows tabs to extend beyond right edge */
.application.window-app.sheet.actor.character.osp {
  overflow: visible !important;
}

/* Prevent accidental stacking-contexts on ancestors which can break z-index ordering */
.application.window-app.sheet.actor.character.osp,
.application.window-app.sheet.actor.character.osp .window-content,
.osp.sheet.actor.character,
.window-content,
.window-content .window-content,
.osp .window-content,
form.osp.sheet.actor.character {
  transform: none !important;
  opacity: 1 !important;
  filter: none !important;
  will-change: auto !important;
  backface-visibility: visible !important;
}

/* Neutralize small transforms */
.languages-tags,
.char-name,
.char-class,
.char-align,
.char-race,
.char-age,
.char-sex,
.save-label-death span,
.save-label-wands span,
.save-label-paralysis span,
.save-label-breath span,
.save-label-spells span {
  transform: none !important;
  will-change: auto !important;
}

/* Window content wrapper - inherits background from main declaration above */
.application.window-app.sheet.actor.character.osp .window-content,
.osp .window-content {
  /* Background already set by main rule above */
  padding: 0 !important;
  overflow: visible !important;
}

/* Black title bar for character sheet window */
.application.window-app.sheet.actor.character.osp .window-header,
.osp .window-header {
  background: black !important;
  background-color: black !important;
  border-bottom: 1px solid #333 !important;
}

.application.window-app.sheet.actor.character.osp .window-header .window-title,
.osp .window-header .window-title { color: white !important; }
.application.window-app.sheet.actor.character.osp .window-header .header-button,
.osp .window-header .header-button { color: white !important; }
.application.window-app.sheet.actor.character.osp .window-header .header-button:hover,
.osp .window-header .header-button:hover { background: rgba(255,255,255,0.2) !important; }

/* XP progress bar */
form.osp.sheet.actor.character .xp-progress-bar,
.osp.sheet.actor.character .xp-progress-bar { background-color: #4a90e2 !important; }

/* Static header background image */
form.osp.sheet.actor.character .static-header,
.static-header {
  background: url('/systems/osp-houserules/assets/character-sheet/static-sheet.webp') no-repeat left top !important;
  background-position: left top !important;
  background-size: contain !important;
  background-color: transparent !important;
  margin-top: 0 !important;
  padding-top: 0 !important;
}

/* FORCE OVERRIDE: Semi-transparent tabs to show background */
form.osp.sheet.actor.character .sheet-tabs a.item,
.osp.sheet.actor.character .sheet-tabs a.item,
.sheet.actor.character .sheet-tabs a.item { opacity: 1 !important; background: rgba(255,255,255,0.9) !important; box-shadow: none !important; }

form.osp.sheet.actor.character .sheet-tabs a.item:hover,
.osp.sheet.actor.character .sheet-tabs a.item:hover,
.sheet.actor.character .sheet-tabs a.item:hover { opacity: 1 !important; background: rgba(247,247,247,0.95) !important; }

form.osp.sheet.actor.character .sheet-tabs a.item.active,
.osp.sheet.actor.character .sheet-tabs a.item.active,
.sheet.actor.character .sheet-tabs a.item.active { opacity: 1 !important; background: rgba(255,255,255,0.95) !important; }

/* Let JavaScript control z-index via variables or inline assignment */
form.osp.sheet.actor.character .sheet-tabs a.item:hover,
form.osp.sheet.actor.character .sheet-tabs a.item.active,
.osp.sheet.actor.character .sheet-tabs a.item:hover,
.osp.sheet.actor.character .sheet-tabs a.item.active,
.sheet.actor.character .sheet-tabs a.item:hover,
.sheet.actor.character .sheet-tabs a.item.active { z-index: inherit !important; }

/* Tab content area */
.sheet-body .tab { display: none; background: none !important; border: none !important; }
.sheet-body .tab.active { display: block; }

/* Height/Weight neutralization */
.char-height, .char-weight { box-shadow: none !important; background: transparent !important; border: none !important; border-radius: 0 !important; outline: none !important; }
.height-group, .weight-group { box-shadow: none !important; background: transparent !important; border: none !important; outline: none !important; }

/* XP Award Button */
button.xp-award-btn { color: #704214 !important; background: none !important; border: none !important; outline: none !important; box-shadow: none !important; }
button.xp-award-btn:hover, button.xp-award-btn:focus { color: #8B4513 !important; }

/* Portrait transform */
.portrait-img { transform: scale(var(--user-portrait-scale, 1)) translate(var(--user-portrait-x, 0px), var(--user-portrait-y, 0px)); transform-origin: center center; transition: transform 0.2s ease; }

.portrait-controls { position: absolute; top: 100%; left: 0; margin-top: 5px; background: rgba(0,0,0,0.95); color: white; padding: 3px; border-radius: 3px; display: none; z-index: var(--z-overlay, 1000); font-size: 10px; white-space: nowrap; border: 1px solid #666; box-shadow: 0 2px 4px rgba(0,0,0,0.5); }
.portrait-controls[style*="display: block"] { display: block !important; visibility: visible !important; opacity: 1 !important; }
.portrait-controls button { background: #555; color: white; border: 1px solid #777; padding: 2px 4px; margin: 1px; border-radius: 2px; cursor: pointer; font-size: 10px; width: 18px; height: 18px; line-height: 14px; display: inline-block; text-align: center; box-sizing: border-box; }
.portrait-controls button:hover { background: #777; border-color: #999; }
.portrait-controls button:active { background: #333; }
.portrait-controls .btn-group { display: inline-block; margin: 0 2px; vertical-align: top; }
.portrait-controls .btn-group:not(:last-child) { border-right: 1px solid #777; padding-right: 3px; }
.portrait-container.adjusting { outline: 1px dashed #00aaff; overflow: visible !important; z-index: calc(var(--z-overlay, 1000) + 1) !important; }

/* Tooltip classes to replace JS-injected cssText */
.cs-tooltip { position: absolute; background: #333; color: white; padding: 8px 12px; border-radius: 4px; font-size: 12px; line-height: 1.4; z-index: var(--z-overlay, 1000); pointer-events: none; opacity: 0; transition: opacity 0.2s; white-space: nowrap; }
.cs-tooltip--xp { box-shadow: 0 2px 8px rgba(0,0,0,0.3); z-index: var(--z-top, 10000); }
.cs-tooltip--portrait { box-shadow: 0 2px 8px rgba(0,0,0,0.3); z-index: var(--z-top, 10000); }

/* Dialog helper used by XP award dialog to centralize its presentation */
.cs-xp-dialog { background: white !important; }
.cs-xp-dialog .window-header { background: black !important; color: white !important; }
.cs-xp-dialog .window-content { background: white !important; }

/* Dialog layout and control helpers for handler-generated markup */
.cs-xp-dialog-container { padding: 10px; }
.cs-xp-row { margin-bottom: 20px; text-align: center; }
.cs-xp-inline { margin-bottom: 10px; display: flex; align-items: center; gap: 8px; justify-content: center; }
.cs-xp-flex { display: flex; gap: 20px; }
.cs-xp-col { flex: 1; }
.cs-input-small { width: 60px; padding: 5px; background-color: white; border: 1px solid black; border-radius: 9px; box-shadow: none !important; text-align: center; }
.cs-input-medium { width: 80px; padding: 5px; background-color: white; border: 1px solid black; border-radius: 9px; box-shadow: none !important; text-align: center; }
.cs-no-border { border: none; background: none; color: inherit; padding: 0; }
.cs-xp-preview { margin-top: 15px; padding: 8px; background: #f5f5f5; border-radius: 3px; display: none; }

/* XP dialog side column helpers (replaces small inline wrappers) */
.cs-xp-side { flex: 1; display: flex; flex-direction: column; justify-content: center; }
.cs-xp-side-row { margin-bottom: 10px; display: flex; align-items: center; gap: 8px; justify-content: center; }

/* Reusable small select style for inline dialogs (appearance reset handled elsewhere) */
.cs-select-inline { width: 60px; padding: 5px; background-color: white; border: 1px solid black; border-radius: 9px; box-shadow: none !important; text-align: center; line-height: 1.2; appearance: none; -webkit-appearance: none; -moz-appearance: none; }

/* Language dialog helpers */
.cs-dialog-row { margin-bottom: 8px; }
.cs-dialog-columns { display: flex; gap: 40px; }
.cs-dialog-column { display: flex; flex-direction: column; align-items: flex-start; gap: 6px; }
.cs-custom-input { width: 145px; }
.cs-dialog-label { display: flex; align-items: center; gap: 8px; }

/* Level & portrait container utility classes (migrate inline box-shadow/positioning into class-based rules) */
.cs-level-container { position: absolute; width: 64px; height: 34px; }
.cs-level-shadow { position: absolute; top: 0; left: 0; width: 64px; height: 34px; z-index: var(--z-labels, 15); pointer-events: none; box-shadow: none !important; border-radius: 6px; }

/* Static header helper */
.cs-static-header { height: 230px; flex-shrink: 0; position: relative; z-index: var(--z-sheet, 10); background-size: 100% auto !important; background-color: transparent !important; margin-top: 0 !important; padding-top: 0 !important; pointer-events: none; }

/* Combat and ability layouts markup helpers */
.cs-combat-stats { display: flex; gap: 1.5rem; justify-content: center; margin-bottom: 2rem; flex-wrap: wrap; }
.cs-combat-stat { display: flex; flex-direction: column; align-items: center; }
.cs-save-badge { width: 75px; height: 75px; border: 2px solid #4a5568; border-radius: 50%; position: relative; background-color: white; box-shadow: none !important; }

/* Ability score box */
.cs-ability-select {
  @extend %visual-center-large;
  @extend %single-character-center;
  @extend %round-container-center;
  @extend %numeric-center;
  
  width: 75px;
  height: 75px;
  font-size: 70px;
  font-weight: normal;
  background-color: white !important;
  appearance: none;
  border-radius: 9px;
  box-shadow: none !important;
  
  /* Large ability scores in circular containers need maximum adjustment */
  padding: 0;
  transform: translateY(-0.1em);
}

/* Tabs helper (in case nav items had inline styles) */
.cs-tabs { display: flex; flex-direction: column; }
.cs-tab-item { opacity: 1 !important; background: white !important; box-shadow: none !important; }

/* Tabs runtime helpers */
.cs-tabs {
  position: relative !important;
  z-index: var(--z-top, 10000) !important;
  pointer-events: auto !important;
  top: var(--tabs-top, auto);
}
.cs-tab-item {
  position: relative !important;
  z-index: var(--z-top, 10000) !important;
  pointer-events: auto !important;
  cursor: pointer !important;
}
.cs-force-pointer { pointer-events: auto !important; }

/* ================================================================
   VISUAL TEXT CENTERING SYSTEM
   ================================================================
   
   This system provides precise text centering that accounts for both
   mathematical and visual weight. Different font sizes and characters
   require different compensation for optimal visual centering.
   
   ================================================================ */

/* Base centering mixin applied to all centered fields */
%visual-center-base {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Reset any inherited text transformations */
  text-indent: 0;
  text-transform: none;
  
  /* Ensure consistent baseline alignment */
  vertical-align: baseline;
}

/* Size-specific visual adjustments for Minion Pro font */
%visual-center-large {
  @extend %visual-center-base;
  
  /* Large text (40px+) - account for descender visual weight */
  transform: translateY(-0.02em);
  letter-spacing: -0.01em;
  
  /* Optical adjustment for rounded/circular containers */
  &.in-circle {
    transform: translateY(-0.05em);
  }
}

%visual-center-medium {
  @extend %visual-center-base;
  
  /* Medium text (20-39px) - subtle baseline adjustment */
  transform: translateY(-0.01em);
  letter-spacing: 0;
  
  /* Adjustment for serif fonts at medium sizes */
  &.serif-adjust {
    transform: translateY(0.02em);
  }
}

%visual-center-small {
  @extend %visual-center-base;
  
  /* Small text (12-19px) - minimal adjustment */
  transform: translateY(0);
  letter-spacing: 0.01em;
}

/* Specific adjustments for common number/character types */
%numeric-center {
  /* Numbers often need slight upward adjustment */
  transform: translateY(-0.03em);
  
  /* Monospace-like spacing for consistency */
  font-variant-numeric: tabular-nums;
}

%single-character-center {
  /* Single characters (ability scores, etc.) */
  transform: translateY(-0.04em);
  font-weight: normal;
  
  /* Prevent character distortion */
  font-synthesis: none;
}

/* Input field specific centering (accounts for border/padding visual weight) */
%input-visual-center {
  @extend %visual-center-base;
  
  /* Compensate for visual weight of borders and shadows */
  padding-top: 0.1em;
  padding-bottom: 0;
  
  /* Ensure text cursor appears centered */
  &:focus {
    text-align: center;
  }
  
  /* Placeholder text centering */
  &::placeholder {
    text-align: center;
    transform: translateY(-0.01em);
  }
}

/* Container-specific adjustments */
%round-container-center {
  /* For circular/rounded containers - text appears lower */
  transform: translateY(-0.06em);
}

%rectangular-container-center {
  /* For rectangular containers - standard centering */
  transform: translateY(-0.02em);
}

/* Font loading and fallback management */
@supports (font-family: 'Minion Pro') {
  .osp {
    font-family: 'Minion Pro', serif !important;
  }
}

/* Cursor helper classes for JS toggles */
.cs-cursor-pointer { cursor: pointer !important; }
.cs-cursor-text { cursor: text !important; }

/* XP progress width via CSS variable */
.xp-progress { --xp-progress-width: 0%; }
.xp-progress { --xp-progress-color: rgba(112, 66, 21, 0.8); }
.xp-progress .xp-progress-fill { width: var(--xp-progress-width); transition: width 0.3s ease; background-color: var(--xp-progress-color, rgba(112, 66, 21, 0.8)); }

/* Vertical level progress uses CSS variables set by JS */
/* level-xp-progress { width: var(--level-height, 0%); background: var(--level-bg, linear-gradient(to right, #22c55e 0%, #4ade80 100%)); border-top-right-radius: var(--progress-top-radius, 0px); border-bottom-right-radius: var(--progress-top-radius, 0px); }

/* Static level progress bar hook */
/* .level-progress-bar { width: var(--static-level-width, 0%); transition: width 0.3s ease; }*/

/* Combat stat boxes */
.cs-combat-stats { display: flex; gap: 1.5rem; justify-content: center; margin-bottom: 2rem; flex-wrap: wrap; }
.cs-combat-stat { display: flex; flex-direction: column; align-items: center; }
.cs-combat-input {
  @extend %input-visual-center;
  @extend %visual-center-medium;
  @extend %numeric-center;
  
  width: 80px;
  height: 40px;
  font-size: 1.2rem;
  border: 2px solid #4a5568;
  border-radius: 8px;
  background-color: white;
  
  /* Combat values are typically numbers */
  transform: translateY(-0.02em);
}
.cs-unarmored-box { width: 80px; height: 40px; text-align: center; font-size: 1.2rem; border: 2px solid #4a5568; border-radius: 8px; display: flex; align-items: center; justify-content: center; background-color: white; }

/* Save badge system */
.cs-save-group { position: relative; display: inline-block; margin: 0 10px; }
.cs-save { position: relative; display: flex; flex-direction: column; align-items: center; width: 80px; height: 80px; overflow: visible; }
.cs-save-badge { width: 75px; height: 75px; border: 2px solid #4a5568; border-radius: 50%; position: relative; background-color: white; box-shadow: none !important; display: flex; align-items: center; justify-content: center; }
.cs-save-value {
  @extend %visual-center-large;
  @extend %single-character-center;
  @extend %round-container-center;
  
  font-size: 60px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  letter-spacing: -1px;
  
  /* Visual centering override for save values */
  transform: translateY(-0.08em);
}
.cs-save-label { width: 400px; height: 60px; overflow: visible; z-index: var(--z-labels, 15); pointer-events: none; }
.cs-save-label svg { overflow: visible; }
.cs-save-label text { font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif; font-size: 14px; fill: #704214; letter-spacing: 0.5px; }

/* Ability score label */
.cs-ability-label {
  @extend %visual-center-large;
  @extend %single-character-center;
  
  font-size: 45px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  letter-spacing: 0.03em;
  
  /* Ability scores are typically single numbers */
  transform: translateY(-0.06em);
}

/* Misc helpers for textareas in bio */
.cs-bio-textarea { width: 100%; padding: 0.5rem; border: 1px solid #ccc; border-radius: 3px; resize: vertical; font-family: inherit; background-color: white; }

/* Encumbrance bar helpers */
.encumbrance-section .encumbrance-bar-container { position: relative; }
.encumbrance-section .encumbrance-bar { height: 12px; background: #22c55e; transition: width 0.3s ease; }
.encumbrance-section .encumbrance-bar { width: var(--encumbrance-width, 0%); }

/* Level progress helpers */
.cs-level-progress-bar { position: absolute; top: 0; left: 0; height: 100%; border-radius: 3px; background-color: rgba(112, 66, 21, 0.8); width: 0%; transition: width 0.3s ease; }
.cs-level-display {
  /* Removed conflicting @extend mixins - using manual centering instead */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  position: absolute;
  top: 2px;
  left: 0;
  width: 100%;
  height: 100%;
  font-size: 24px;
  color: #704214;
  z-index: var(--z-level, 8);
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  background: transparent !important;
  box-shadow: none !important;
  
  /* Level numbers need precise centering - adjust for visual weight */
  transform: translateY(0.7em) !important;
}

/* Portrait helpers - configurable dimensions via CSS variables */
.cs-portrait-container { 
  position: absolute; 
  width: 138px !important; /* Fixed width - more reliable than CSS variables */
  height: 141px !important; /* Fixed height - more reliable than CSS variables */
  /* z-index: 99999 !important; */
  overflow: hidden; 
}
.cs-portrait-display,
.portrait-display { 
  position: absolute; 
  top: 0; 
  left: 0; 
  width: 100%; 
  height: 100%; 
  cursor: pointer; 
  border-radius: 3px; 
  overflow: hidden; 
  pointer-events: auto; 
}
.cs-portrait-img,
.portrait-img { 
  /* Default size: fit within container while maintaining aspect ratio */
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
  display: block; 
  /* Player can resize and reposition from this starting size */
}

/* XP/Next level small field helpers */
.cs-field {
  @extend %input-visual-center;
  @extend %visual-center-medium;
  
  background-color: transparent !important;
  border: none;
  box-shadow: none !important;
  appearance: none;
  margin: 0;
  color: inherit;
  
  /* Input fields need compensation for visual border weight */
  padding: 0.05em 0 0 0;
  transform: translateY(0.09em);
}
.cs-xp-mod-display {
  @extend %visual-center-medium;
  @extend %numeric-center;
  @extend %rectangular-container-center;
  
  width: 64px;
  height: 34px;
  pointer-events: none;
  font-size: 24px;
  
  /* XP modifier percentages with + signs need special centering */
  transform: translateY(0.09em);
  text-indent: -0.008em;
}
.cs-xp-display {
  @extend %visual-center-medium;
  @extend %numeric-center;
  @extend %input-visual-center;
  
  width: 134px;
  height: 34px;
  cursor: pointer;
  pointer-events: auto;
  font-size: 24px;
  
  /* XP values are numbers that need precise centering */
  transform: translateY(0.09em);
}
/* Next Level field class moved below - see .cs-next-level-field for independent control */

/* Ensure inputs behave consistently across browsers with visual centering */
input.cs-field, 
textarea.cs-bio-textarea, 
select.cs-ability-select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  
  /* Apply visual centering to all form elements */
  @extend %input-visual-center;
}

/* Additional browser-specific centering fixes */
input[type="text"], 
input[type="number"], 
select {
  /* WebKit browsers need extra centering help */
  &::-webkit-input-placeholder {
    text-align: center;
    line-height: normal;
  }
  
  /* Firefox placeholder centering */
  &::-moz-placeholder {
    text-align: center;
    line-height: normal;
  }
  
  /* Edge/IE placeholder centering */
  &::-ms-input-placeholder {
    text-align: center;
    line-height: normal;
  }
}

/* Visual centering for specific input types */
input[type="number"] {
  @extend %numeric-center;
  
  /* Remove spinner arrows that affect visual centering */
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none;
    margin: 0;
  }
  
  /* Firefox number input styling */
  -moz-appearance: textfield;
  appearance: textfield;
}

/* ================================================================
   MANUAL FINE-TUNING UTILITY CLASSES
   ================================================================
   
   These classes can be applied when the automatic visual centering
   needs adjustment for specific elements or edge cases.
   
   ================================================================ */

/* Vertical adjustment utilities */
.cs-center-nudge-up-xs { transform: translateY(-0.01em) !important; }
.cs-center-nudge-up-sm { transform: translateY(-0.02em) !important; }
.cs-center-nudge-up-md { transform: translateY(-0.04em) !important; }
.cs-center-nudge-up-lg { transform: translateY(-0.06em) !important; }
.cs-center-nudge-up-xl { transform: translateY(-0.08em) !important; }

.cs-center-nudge-down-xs { transform: translateY(0.01em) !important; }
.cs-center-nudge-down-sm { transform: translateY(0.02em) !important; }
.cs-center-nudge-down-md { transform: translateY(0.04em) !important; }
.cs-center-nudge-down-lg { transform: translateY(0.06em) !important; }
.cs-center-nudge-down-xl { transform: translateY(0.08em) !important; }

/* Horizontal adjustment utilities */
.cs-center-nudge-left-xs { text-indent: -0.01em !important; }
.cs-center-nudge-left-sm { text-indent: -0.02em !important; }
.cs-center-nudge-left-md { text-indent: -0.04em !important; }

.cs-center-nudge-right-xs { text-indent: 0.01em !important; }
.cs-center-nudge-right-sm { text-indent: 0.02em !important; }
.cs-center-nudge-right-md { text-indent: 0.04em !important; }

/* Letter spacing adjustments for visual centering */
.cs-letter-spacing-tight { letter-spacing: -0.02em !important; }
.cs-letter-spacing-normal { letter-spacing: 0 !important; }
.cs-letter-spacing-loose { letter-spacing: 0.02em !important; }

/* Font weight adjustments that affect visual centering */
.cs-visual-weight-light { font-weight: 300 !important; transform: translateY(-0.01em) !important; }
.cs-visual-weight-normal { font-weight: 400 !important; }
.cs-visual-weight-bold { font-weight: 600 !important; transform: translateY(0.01em) !important; }

/* Character-specific centering adjustments */
.cs-percentage-center {
  /* Percentage signs need slight left adjustment */
  text-indent: -0.01em;
  transform: translateY(-0.02em);
}

.cs-plus-sign-center {
  /* Plus signs in XP modifiers need adjustment */
  text-indent: -0.005em;
  transform: translateY(-0.03em);
}

/* Field-specific fine-tuning classes for JavaScript application */
.cs-level-field-adjust {
  /* Specific adjustment for level field if needed */
  transform: translateY(0.04em) !important;
}

.cs-xp-mod-field-adjust {
  /* Specific adjustment for XP modifier field */
  transform: translateY(-0.015em) !important;
  text-indent: -0.01em !important;
}

/* Custom field-specific adjustments - add your own here */
.cs-custom-level-fix {
  /* Custom level field adjustment */
  transform: translateY(0.015em) !important;
  text-indent: -0.005em !important;
}

.cs-custom-xp-mod-fix {
  /* Custom XP modifier adjustment */
  transform: translateY(-0.025em) !important;
  text-indent: -0.012em !important;
}

.cs-custom-name-fix {
  /* Custom character name adjustment */
  transform: translateY(-0.005em) !important;
  letter-spacing: 0.005em !important;
}

/* Add more custom classes as needed */
.cs-custom-ability-fix {
  /* Custom ability score adjustment */
  transform: translateY(-0.03em) !important;
  font-variant-numeric: tabular-nums !important;
}

.cs-number-only-center {
  /* For fields that only contain single numbers */
  transform: translateY(-0.02em) !important;
  font-variant-numeric: tabular-nums !important;
}

.cs-mixed-alphanumeric-center {
  /* Mixed content like "+10%" needs balanced centering */
  text-indent: -0.008em;
  transform: translateY(-0.025em);
}

/* Disable visual centering for elements that need manual control */
.cs-manual-center {
  transform: none !important;
  text-indent: 0 !important;
  letter-spacing: inherit !important;
}

/* Header field classes (name, class, race, small fields) */
.cs-char-field-group { display: flex; flex-direction: column; align-items: center; margin-bottom: -5px; }
.cs-char-name {
  @extend %input-visual-center;
  @extend %visual-center-medium;
  
  width: 280px;
  height: 34px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  font-size: 24px;
  color: #704214 !important;
  background-color: transparent !important;
  box-shadow: none !important;
  appearance: none;
  margin: 0;
  overflow: visible;
  white-space: nowrap;
  text-overflow: clip;
  border: none;
  pointer-events: auto;
  
  /* Character names need balanced centering for variable text length */
  padding: 0.05em 2px 0 2px;
  transform: translateY(0.24em) !important;
}
.cs-select-large {
  /* Removed conflicting @extend mixins - using manual centering instead */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  width: 134px;
  height: 34px;
  font-size: 24px;
  background-color: transparent !important;
  box-shadow: none !important;
  appearance: none;
  margin: 0;
  border: none;
  pointer-events: auto;
  
  /* Large select elements need centered text - multiple centering approaches */
  padding: 0.05em 5px 0 5px;
  transform: translateY(0.25em) !important;
  
  /* Alternative centering methods if transform doesn't work */
  line-height: 1.1 !important;        /* Adjust line height */
  vertical-align: middle !important;   /* Vertical alignment */
  
  /* For testing - remove when satisfied */
  /* margin-top: -2px !important; */   /* Use margin instead of transform */
}

.cs-select-small {
  @extend %input-visual-center;
  @extend %visual-center-medium;
  @extend %numeric-center;
  
  width: 63px;
  height: 34px;
  font-size: 24px;
  background-color: transparent !important;
  box-shadow: none !important;
  appearance: none;
  margin: 0;
  border: none;
  pointer-events: auto;
  
  /* Small select elements - often contain numbers */
  padding: 0.04em 0 0 0;
  transform: translateY(-0.03em);
}
/* Background field - separate class for independent control */
.cs-background-select {
  /* Inherit base layout from large selects but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning */
  width: 134px;
  height: 34px;
  
  /* Typography - uses CSS variable from JavaScript for dynamic sizing */
  font-size: var(--background-font-size, 24px);
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  font-weight: normal;
  letter-spacing: 0;
  
  /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Layout */
  margin: 0;
  padding: 0.05em 5px 0 5px;
  
  /* Interaction */
  pointer-events: auto;
  cursor: pointer;
  
  /* Visual centering */
  transform: translateY(0.05em);
  vertical-align: middle;
  
  /* Focus states - customize as needed */
  &:focus {
    outline: none;
  }
  
  /* Disabled states */
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

/* Race field - separate class for independent control */
.cs-race-select {
  /* Inherit base layout from large selects but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning */
  width: 134px;
  height: 34px;
  
  /* Typography - customize as needed */
  font-size: 24px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  font-weight: normal;
  letter-spacing: 0;
  
  /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Layout */
  margin: 0;
  padding: 0.05em 5px 0 5px;
  
  /* Interaction */
  pointer-events: auto;
  cursor: pointer;
  
  /* Visual centering */
  transform: translateY(0.11em) !important;
  vertical-align: middle;
  
  /* Focus states - customize as needed */
  &:focus {
    outline: none;
  }
  
  /* Disabled states (for race-as-class synchronization) */
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: rgba(0, 0, 0, 0.05) !important;
  }
}

/* Next Level field - separate class for independent control */
.cs-next-level-field {
  /* Inherit base layout but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning */
  width: 134px;
  height: 34px;
  
  /* Typography - customize as needed */
  font-size: 24px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  font-weight: normal;
  letter-spacing: 0;
  
  /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Layout */
  margin: 0;
  padding: 0.05em 0 0 0;
  
  /* Interaction - readonly field */
  pointer-events: none;
  cursor: default;
  user-select: none;
  
  /* Visual centering - numbers need precise positioning */
  transform: translateY(0.11em) !important;
  vertical-align: middle;
  
  /* Numeric formatting */
  font-variant-numeric: tabular-nums;
  
  /* Focus states - not applicable for readonly */
  &:focus {
    outline: none;
  }
  
  /* Custom styling for calculated values */
  &[readonly] {
    background-color: transparent !important;
    color: inherit;
  }
}

/* Next Level container with XP progress bar */
.next-level-group {
  position: relative;
  width: 134px;
  height: 34px;
  
  /* XP Progress bar within Next Level field */
  .level-xp-progress {
    position: absolute;
    top: 0px;
    left: 0px;
    height: 33px;
    width: var(--level-height, 0%);
    background: var(--level-bg, linear-gradient(to right, rgba(112, 66, 21, 0.2) 0%, rgba(112, 66, 21, 0.2) 100%));
    transition: width 0.3s ease;
    z-index: 1;
    border-radius: 3px;
    overflow: hidden;
  }
  
  /* Next Level display sits on top of progress bar */
  .cs-next-level-field {
    position: relative;
    z-index: 2;
  }
}

/* Alignment field - separate class for independent control */
.cs-alignment-select {
  /* Inherit base layout from large selects but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning */
  width: 134px;
  height: 34px;
  
  /* Typography - customize as needed */
  font-size: 24px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  font-weight: normal;
  letter-spacing: 0;
  
  /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Layout */
  margin: 0;
  padding: 0.05em 5px 0 5px;
  
  /* Interaction */
  pointer-events: auto;
  cursor: pointer;
  
  /* Visual centering */
  transform: translateY(0.22em) !important;
  vertical-align: middle;
  
  /* Focus states - customize as needed */
  &:focus {
    outline: none;
  }
}

/* Height field - separate class for independent control */
.cs-height-field {
  /* Inherit base layout but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning */
  width: 65px;
  height: 35px;
  
  /* Typography - customize as needed */
  font-size: 24px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  letter-spacing: 0;
  
  /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Layout */
  margin: 0;
  padding: 3px 2px 0 2px;
  
  /* Interaction */
  pointer-events: auto;
  cursor: text;
  
  /* Visual centering for measurements */
  transform: translateY(0);
  vertical-align: middle;
  
  /* Focus states */
  &:focus {
    outline: none;
  }
  
  /* Input styling for physical measurements */
  &::placeholder {
    color: #704214;
    font-style: italic;
  }
}

/* Weight field - separate class for independent control */
.cs-weight-field {
  /* Inherit base layout but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning */
  width: 65px;
  height: 35px;
  
  /* Typography - customize as needed */
  font-size: 24px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  letter-spacing: 0;
  
  /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Layout */
  margin: 0;
  padding: 3px 2px 0 2px;
  
  /* Interaction */
  pointer-events: auto;
  cursor: text;
  
  /* Visual centering for measurements */
  transform: translateY(0);
  vertical-align: middle;
  
  /* Focus states */
  &:focus {
    outline: none;
  }
  
  /* Input styling for physical measurements */
  &::placeholder {
    color: #704214;
    font-style: italic;
  }
}

/* Languages field - separate class for independent control */
.cs-languages-field {
  /* Container for language tags display */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning - uses CSS variables from existing system */
  width: var(--languages-row-width, 272px);
  height: 33px;
  min-height: 30px;
  
  /* Typography - uses CSS variables for dynamic control */
  font-size: var(--languages-font-size, 24px);
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif;
  font-weight: normal;
  letter-spacing: var(--languages-letter-spacing, 0px);
  line-height: var(--languages-line-height, 1);
  
  /* Appearance */
  background: transparent !important;
  color: #704214 !important;
  border: none !important;
  box-shadow: none !important;
  
  /* Layout */
  margin: 0;
  padding: 2px;
  
  /* Interaction */
  pointer-events: auto;
  cursor: pointer;
  user-select: none;
  
  /* Visual centering - Y-axis positioning adjustment */
  transform: translateY(0.11em) !important;
  vertical-align: middle;
  
  /* Empty state styling */
  &:empty::before {
    content: "Click to add languages...";
    color: #704214 !important;
    font-style: italic;
    font-size: 12px;
  }
}

/* Age field - separate class for independent control */
.cs-age-field {
  /* Inherit base layout but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;
  
  /* Size and positioning - compact field for age */
  width: 64px;
  height: 34px;
  
  /* Typography - Age field with Minion Pro */
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', serif !important;
  font-size: 24px;
  color: #704214;

    /* Appearance */
  background-color: transparent !important;
  color: inherit;
  border: none;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  
  /* Visual centering - Y-axis positioning adjustment */
  transform: translateY(0.1em) !important;
  vertical-align: middle;
}

/* Sex field - separate class for independent control */
.cs-sex-field {
  /* Inherit base layout but allow independent styling */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1;
  box-sizing: border-box;

  /* Size and positioning - compact dropdown for sex */
  width: 64px;
  height: 34px;
  
  /* Typography - Sex field with Minion Pro */
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', serif !important;
  font-size: 24px;
  color: #704214;
  
  /* Appearance */
  background-color: transparent !important;
  border: none;
  color: inherit;
  box-shadow: none !important;
  appearance: none;
  outline: none;
  cursor: pointer;
  
  /* Remove default select styling */
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  
  /* Visual centering - Y-axis positioning adjustment */
  transform: translateY(0.11em) !important;
  vertical-align: middle;
  
  /* Option styling */
  option {
    font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', serif;
    font-size: 16px;
    color: #704214;
    background-color: #ffffff;
  }
}

/* Keep this partial focused on presentation only; behavior remains in JS. */

/* Absolute-position helper using CSS variables set inline on elements */
.cs-abs {
  position: absolute !important;
  left: var(--left, auto);
  top: var(--top, auto);
  right: var(--right, auto);
  bottom: var(--bottom, auto);
  z-index: var(--z, auto) !important;
  pointer-events: var(--pointer, auto);
  height: var(--height, auto);
  background: var(--bg, transparent);
}

/* Draggable field helpers */
.draggable-field {
  position: relative !important;
  cursor: move !important;
  user-select: none !important;
  --translate-x: 0px;
  --translate-y: 0px;
  transform: translate(var(--translate-x), var(--translate-y));
}
.draggable-field.dragging { z-index: var(--z-overlay, 1000) !important; opacity: 0.8 !important; }
.draggable-field .drag-handle { position: absolute; top: 2px; right: 2px; font-size: 12px; color: #666; cursor: move; opacity: 0.6; z-index: var(--z-sheet,10); pointer-events: auto; font-weight: bold; text-shadow: 1px 1px 1px rgba(255,255,255,0.8); background: rgba(255,255,255,0.9); border: 1px solid #ccc; border-radius: 2px; padding: 1px 2px; line-height: 1; width: 14px; height: 14px; display: flex; align-items: center; justify-content: center; }
.draggable-field.drag-hover { border-color: #ddd !important; }
.draggable-field.drag-hover .drag-handle { opacity: 1 !important; }

/* Drag handle visibility class toggled by JS instead of inline opacity */
.draggable-field .drag-handle { transition: opacity 0.12s ease; }
.draggable-field .drag-handle.visible { opacity: 1 !important; }

/* Layout controls (export/import/reset grid buttons) */
.layout-controls { position: absolute; top: 5px; right: 5px; z-index: calc(var(--z-overlay, 1000) + 1); display: flex; gap: 5px; }
.layout-controls .layout-btn { width: 24px; height: 24px; border: none; border-radius: 3px; background: #4a5568; color: white; font-size: 12px; cursor: pointer; display: flex; align-items: center; justify-content: center; }
.layout-controls .layout-btn:hover { filter: brightness(1.1); }
.layout-controls .layout-btn.active { background: #2d3748 !important; }

/* Grid overlay - uses CSS variables for grid size */
.grid-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: calc(var(--z-overlay, 1000) - 1);
  background-image: linear-gradient(rgba(0,0,0,0.08) 1px, transparent 1px), linear-gradient(90deg, rgba(0,0,0,0.08) 1px, transparent 1px);
  background-size: var(--grid-size, 10px) var(--grid-size, 10px);
}

/* Sheet body helper to centralize padding/scrolling */
.cs-sheet-body {
  position: absolute !important;
  top: var(--sheet-top, 350px);
  left: 0;
  right: 0;
  bottom: 0;
  padding: 1rem 0.75rem;
  overflow-y: auto;
}

/* Generic small field label */
.cs-field-label { margin-bottom: 0.5rem; font-size: 1.1rem; }

/* Languages row and tags reset for consistent layout */
.languages-row.open-language-dialog { width: var(--languages-row-width, 272px); height: 33px; min-height: 30px; cursor: pointer; display: flex; align-items: center; justify-content: center; padding: 2px; z-index: var(--z-lang-row, 101); }
.languages-tags { 
  display: flex; 
  align-items: center; 
  justify-content: center; 
  width: 100%; 
  line-height: 1.2;
  white-space: wrap; /* Allow wrapping when needed */
  overflow: hidden; 
  font-size: var(--languages-font-size, 24px) !important;
  padding: 0 4px;
  font-family: 'Minion Pro', 'Adobe Minion Pro', 'Minion', 'Times New Roman', Times, serif !important;
  color: #704214 !important;
  text-align: center;
  word-wrap: break-word; /* Allow breaking long words if needed */
  
  /* When not empty, ensure our font size applies - higher specificity */
  &:not(:empty) {
    font-size: var(--languages-font-size, 24px) !important;
  }
}

/* Bio content wrapper */
.bio-content { padding: 1rem; display: flex; flex-direction: column; gap: 1rem; }

/* Position presets (centralize numeric offsets) */
.cs-pos-level { --left: #{$cs-pos-level-left}; --top: #{$cs-pos-level-top}; --z: var(--z-level, 8); }
.cs-pos-portrait { --left: #{$cs-pos-portrait-left}; --top: #{$cs-pos-portrait-top}; --z: var(--z-portrait, 15); }
.cs-pos-languages { --left: #{$cs-pos-languages-left}; --top: #{$cs-pos-languages-top}; --z: var(--z-labels, 15); --pointer: auto; }
.cs-pos-xpmod { --left: #{$cs-pos-xpmod-left}; --top: #{$cs-pos-xpmod-top}; --z: var(--z-labels, 15); }
.cs-pos-xp { --left: #{$cs-pos-xp-left}; --top: #{$cs-pos-xp-top}; --z: var(--z-portrait, 15); }
.cs-pos-next { --left: #{$cs-pos-next-left}; --top: #{$cs-pos-next-top}; --z: var(--z-labels, 15); }
.cs-pos-sep { --bottom: 0; --left: 0; --right: 0; --height: 1px; --bg: transparent; --z: var(--z-labels, 15); }

/* Header / small-field presets discovered during the sweep */
.cs-pos-name { --left: #{$cs-pos-name-left}; --top: #{$cs-pos-name-top}; --z: var(--z-labels, 15); }
.cs-pos-namegroup { --left: #{$cs-pos-namegroup-left}; --top: #{$cs-pos-namegroup-top}; --z: var(--z-labels, 15); }
.cs-pos-class { --left: #{$cs-pos-class-left}; --top: #{$cs-pos-class-top}; --z: var(--z-labels, 15); }
.cs-pos-alignment { --left: #{$cs-pos-alignment-left}; --top: #{$cs-pos-alignment-top}; --z: var(--z-labels, 15); }
.cs-pos-race { --left: #{$cs-pos-race-left}; --top: #{$cs-pos-race-top}; --z: var(--z-labels, 15); }
.cs-pos-age { --left: #{$cs-pos-age-left}; --top: #{$cs-pos-age-top}; --z: var(--z-labels, 15); }
.cs-pos-sex { --left: #{$cs-pos-sex-left}; --top: #{$cs-pos-sex-top}; --z: var(--z-labels, 15); }
.cs-pos-height { --left: #{$cs-pos-height-left}; --top: #{$cs-pos-height-top}; --z: var(--z-labels, 15); }
.cs-pos-weight { --left: #{$cs-pos-weight-left}; --top: #{$cs-pos-weight-top}; --z: var(--z-labels, 15); }
.cs-pos-background { --left: #{$cs-pos-background-left}; --top: #{$cs-pos-background-top}; --z: var(--z-labels, 15); }
.cs-pos-save-label { --left: #{$cs-pos-save-label-left}; --top: #{$cs-pos-save-label-top}; --z: var(--z-labels, 15); }

/* Small helpers found useful during migration */
.cs-tab-relative { position: relative; }
.cs-ability { display: flex; flex-direction: column; align-items: center; }
.cs-bio-heading { margin: 0 0 0.5rem 0; padding-bottom: 0.25rem; border-bottom: 1px solid #ccc; font-size: 1.1em; }
